name: CodeQL

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Detect language based on project files
      - name: Detect language
        id: detect
        run: |
          if [ -f "pom.xml" ]; then
            echo "lang=java" >> "$GITHUB_OUTPUT"
          elif ls *.sln >/dev/null 2>&1; then
            echo "lang=dotnet" >> "$GITHUB_OUTPUT"
          else
            echo "lang=unknown" >> "$GITHUB_OUTPUT"
          fi

      # Setup environment for Java (if needed)
      - name: Setup Java
        if: steps.detect.outputs.lang == 'java'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # Setup environment for .NET (if needed)
      - name: Setup .NET SDK
        if: steps.detect.outputs.lang == 'dotnet'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # Build Java (Maven) project
      - name: Build Java with Maven
        if: steps.detect.outputs.lang == 'java'
        run: mvn -B package --file pom.xml

      # Build .NET project
      - name: Restore .NET dependencies
        if: steps.detect.outputs.lang == 'dotnet'
        run: dotnet restore

      - name: Build .NET
        if: steps.detect.outputs.lang == 'dotnet'
        run: dotnet build --configuration Release --no-restore

      # Initialize CodeQL based on detected language
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ steps.detect.outputs.lang }}

      # Perform CodeQL analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ steps.detect.outputs.lang }}"
